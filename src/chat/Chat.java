/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author anonymous
 */
public class Chat extends javax.swing.JFrame {
    
    private Socket c_socket;
    private static DataInputStream input;
    private DataOutputStream output;
    private Receber t_recebe;
    /**
     * Creates new form Chat
     */
    public Chat() throws IOException, InterruptedException {
        initComponents();                                    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtEnvio = new javax.swing.JTextArea();
        btnEnviar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtRecebimento = new javax.swing.JTextArea();
        btnConectar = new javax.swing.JToggleButton();
        cbxParticipantes = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuFTP = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtEnvio.setColumns(20);
        txtEnvio.setRows(5);
        txtEnvio.setEnabled(false);
        jScrollPane1.setViewportView(txtEnvio);

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        txtRecebimento.setEditable(false);
        txtRecebimento.setColumns(20);
        txtRecebimento.setRows(5);
        jScrollPane2.setViewportView(txtRecebimento);

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        cbxParticipantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxParticipantesActionPerformed(evt);
            }
        });

        jMenu1.setText("Opções");

        jMenuFTP.setText("FTP");
        jMenuFTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFTPActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuFTP);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(cbxParticipantes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConectar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbxParticipantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btnEnviar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        
        try {
            String dado;
            dado = txtEnvio.getText();       
            if(cbxParticipantes.getSelectedItem().equals("Todos")){
                output.writeUTF("#mensagem-"+dado);
            }else{
                output.writeUTF("#privado-"+cbxParticipantes.getSelectedItem()+"-"+dado);
            }
            txtEnvio.setText("");
            
                       
        } catch (Exception ex) {
            Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
             
        if(btnConectar.isSelected()){
            try{
                c_socket = new Socket("127.0.0.1", 8840);
                output = new DataOutputStream(c_socket.getOutputStream());
                input = new DataInputStream(c_socket.getInputStream());              
                t_recebe = new Receber(input);
                t_recebe.start();
                output.writeUTF("#entrada- ");
                txtEnvio.setEnabled(true);
                btnConectar.setText("Desconectar");

            } catch (Exception ex) {
                Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try{
                output.writeUTF("#saida- ");
                t_recebe.stop();
                output.close();
                input.close();
                c_socket.close();               
                txtEnvio.setEnabled(false);
                btnConectar.setText("Conectar");
            } catch (Exception ex) {
                Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
            
    }//GEN-LAST:event_btnConectarActionPerformed

    private void cbxParticipantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxParticipantesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxParticipantesActionPerformed

    private void jMenuFTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFTPActionPerformed
        FTP ftp = new FTP();
        ftp.setVisible(true);
    }//GEN-LAST:event_jMenuFTPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
                        
             	                 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                try {
                    new Chat().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Chat.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    /**
     * @return the c_socket
     */
    public Socket getC_socket() {
        return c_socket;
    }

    /**
     * @param c_socket the c_socket to set
     */
    public void setC_socket(Socket c_socket) {
        this.c_socket = c_socket;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnConectar;
    private javax.swing.JButton btnEnviar;
    public static javax.swing.JComboBox cbxParticipantes;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuFTP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtEnvio;
    public static javax.swing.JTextArea txtRecebimento;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the input
     */
    public DataInputStream getInput() {
        return input;
    }

    /**
     * @param input the input to set
     */
    public void setInput(DataInputStream input) {
        this.input = input;
    }
}
